name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 isort
      - name: Run tests
        run: pytest tests/ -v --tb=short
      - name: Run flake8
        run: flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      - name: Run isort
        run: isort --check-only --diff src tests

  deploy:
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Package source
        run: zip -r snake-python.zip src requirements.txt README.md
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: snake-python-release
          path: snake-python.zip

  notify:
    needs: [checks, deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get commit info
        id: commit-info
        run: |
          echo "commit_message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
          echo "commit_author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "commit_date=$(git log -1 --pretty=format:'%cd' --date=short)" >> $GITHUB_OUTPUT
          echo "files_changed=$(git diff --name-only HEAD~1 HEAD | wc -l)" >> $GITHUB_OUTPUT
          echo "pr_number=$(git log -1 --pretty=format:'%s' | grep -o '#[0-9]\+' | head -1 | sed 's/#//')" >> $GITHUB_OUTPUT
      - name: Discord Notification - Commit to Main
        if: github.event_name == 'push' && !contains(git log -1 --pretty=format:'%s', 'Merge pull request')
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            🚨 **Novo commit na branch main!**
            
            **Repositório:** ${{ github.repository }}
            **Autor:** ${{ steps.commit-info.outputs.commit_author }}
            **Data:** ${{ steps.commit-info.outputs.commit_date }}
            
            **Mensagem do commit:**
            `${{ steps.commit-info.outputs.commit_message }}`
            
            📝 **Hash:** `${{ github.sha }}`
            📦 **Arquivos alterados:** ${{ steps.commit-info.outputs.files_changed }}
            
            🔗 [Ver commit](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
      - name: Discord Notification - Merge PR to Main
        if: github.event_name == 'push' && contains(git log -1 --pretty=format:'%s', 'Merge pull request')
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            🎉 **PR mergeado na main!**
            
            **Repositório:** ${{ github.repository }}
            **Autor do merge:** ${{ steps.commit-info.outputs.commit_author }}
            **Data:** ${{ steps.commit-info.outputs.commit_date }}
            
            **Mensagem do commit:**
            `${{ steps.commit-info.outputs.commit_message }}`
            
            📝 **Hash:** `${{ github.sha }}`
            📦 **Arquivos alterados:** ${{ steps.commit-info.outputs.files_changed }}
            
            🔗 [Ver commit](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            📋 [Ver PR](${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.commit-info.outputs.pr_number }})
